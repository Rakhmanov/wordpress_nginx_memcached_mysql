version: "3.1"

services:
   #### WEB SERVER CONTAINER
   nginx:
      build: 
         context: .
         dockerfile: Dockerfile.nginx
      image: nginx
      restart: unless-stopped
      volumes:
         - ./config/nginx:/etc/nginx/conf.d
         - ./logs/nginx:/var/log/nginx
         - ./www:/var/www/html
      depends_on:
         - wordpress
      labels:
         traefik.port: 80
         traefik.enable: true
         traefik.docker.network: traefik_front
         traefik.frontend.rule: "Host:localhost"
      networks:
         - internal
         - front

   #### PHP BACKEND CONTAINER
   wordpress:
      build: 
         context: .
         dockerfile: Dockerfile.dev
      image: wordpress         
      restart: unless-stopped
      volumes:
         - ./www:/var/www/html
         - ./config/php/xdebug-development.ini:/usr/local/etc/php/conf.d/xdebug-development.ini
         - ./config/php/www.conf:/usr/local/etc/php-fpm.d/www.conf
         - ./config/php/php-fpm.conf:/usr/local/etc/php-fpm.conf
      networks:
         - internal
      depends_on:
         - db
         - memcached
      environment:
         WORDPRESS_DB_HOST: db
         WORDPRESS_DB_USER: wordpress
         WORDPRESS_DB_PASSWORD: wordpress

   #### CACHE CONTAINER
   memcached:
      image: memcached:alpine
      restart: unless-stopped
      environment:
         - MEMCACHED_CACHE_SIZE=64
      networks:
         - internal

   #### DATABASE CONTAINER
   db:
      image: mysql:5.7
      restart: unless-stopped
      volumes:
         - mysql_data:/var/lib/mysql
         - ./config/mysql:/etc/mysql/conf.d
         - ./db/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
      command: mysqld --innodb-buffer-pool-size=20M
      ports:
         - 3306:3306
      networks:
         - internal
      environment:
         MYSQL_ROOT_PASSWORD: wordpress
         MYSQL_DATABASE: wordpress
         MYSQL_USER: wordpress
         MYSQL_PASSWORD: wordpress

   #### PROXY CONTAINER
   traefik:
      image: traefik:alpine
      restart: unless-stopped
      ports:
         - 80:80
         - 8080:8080
         - 443:443
      networks:
         - front
      labels:
         traefik.docker.network: traefik_front
         traefik.port: 8080
      volumes:
         - /var/run/docker.sock:/var/run/docker.sock
         - ./config/traefik/traefik.dev.toml:/traefik.toml
      container_name: traefik

volumes:
  mysql_data:

networks:
   internal:
   front:
      name: traefik_front
      external: true
