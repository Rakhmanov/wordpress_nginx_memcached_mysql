version: "3.1"

services:
   #### WEB SERVER CONTAINER
   nginx:
      image: nginx:alpine
      restart: unless-stopped
      volumes:
         - ./www:/var/www/html
         - ./logs/nginx:/var/log/nginx
         - ./config/nginx:/etc/nginx/conf.d
      networks:
         - internal
         - front
      depends_on:
         - wordpress
      labels:
         traefik.port: 80
         traefik.enable: true
         traefik.protocol: http
         traefik.docker.network: traefik_front
         traefik.frontend.rule: "Host:localhost"

   #### PHP WORDPRESS CONTAINER
   wordpress:
      build:
         context: .
         dockerfile: Dockerfile.dev
      image: wordpress
      restart: unless-stopped
      volumes:
         - ./www:/var/www/html
         - ./config/php/php-fpm.conf:/usr/local/etc/php-fpm.conf
         - ./config/php/www.conf:/usr/local/etc/php-fpm.d/www.conf
         - ./config/php/xdebug-development.ini:/usr/local/etc/php/conf.d/xdebug-development.ini
      ports:
         - 9001:9001
      networks:
         - internal
      depends_on:
         - db
         - memcached
      environment:
         WORDPRESS_DB_HOST: db
         WORDPRESS_DB_USER: wordpress
         WORDPRESS_DB_PASSWORD: wordpress

   #### MEMCAHED CONTAINER
   memcached:
      image: memcached:alpine
      restart: unless-stopped
      environment:
         - MEMCACHED_CACHE_SIZE=64
      networks:
         - internal

   #### DATABASE CONTAINER
   db:
      image: mysql:5.7
      restart: unless-stopped
      volumes:
         - ./db/data:/var/lib/mysql
         - ./config/mysql:/etc/mysql/conf.d
         -  ./db/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
      command: mysqld  --innodb-buffer-pool-size=20M
      #    user: "1000:50"
      ports:
         - 3306:3306
      networks:
         - internal
      environment:
         MYSQL_USER: wordpress
         MYSQL_DATABASE: wordpress
         MYSQL_PASSWORD: wordpress
         MYSQL_ROOT_PASSWORD: wordpress

   traefik:
      image: traefik:alpine
      restart: unless-stopped
      ports:
         - 80:80
         - 8080:8080
      networks:
         - front
      labels:
         traefik.port: 8080
         traefik.enable: true
         traefik.docker.network: traefik_front
      volumes:
         - /var/run/docker.sock:/var/run/docker.sock
         - ./config/traefik/traefik.dev.toml:/traefik.toml

volumes:
   mysql_data:

networks:
   internal:
   front:
   #   external:
   #      name: traefik_front
